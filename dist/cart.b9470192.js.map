{"mappings":"oeACA,IAAAA,EAAAC,EAAA,gDAQA,MAUMC,EAAMF,EAAAG,cAVW,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKHC,EAAOC,EAAAC,UACPC,EAAKC,EAAAC,aAAab,GACRc,EAAAC,WAAWf,2DChB3B,MAAMgB,EAAcC,SAASC,eAAe,QACtCC,EAAeF,SAASC,eAAe,SAC7C,IAAIE,EAAO,GACPC,EAAQ,EAEZ,MAAMC,EAAkBL,SAASC,eAAe,eAGhD,SAASK,EAASC,GAEdA,EAAKC,SAAQC,KAwBjB,SAAuBA,GACnB,MAAMC,EAAcV,SAASW,cAAc,MAC3C,IAAIC,EAAS,EACbF,EAAYG,UAAY,UACxBH,EAAYI,UAAY,mEAeZL,EAAAM,OAAA,8DACaN,EAAKO,gHAGxBP,EAAAO,+BAAAJ,mGAGsBK,EAAOC,eAAcT,EAAAU,4BAGpBC,YAAeV,KACpCW,iBAAU,SAAAC,IACU,WAApBA,EAAAC,OAAQC,SAAY,oBAAAF,EAAAC,OAAAV,YACpBY,QAAQC,IAAC,cAhDrBC,eAA6BC,GACzB,MAAMC,EAAU1B,EAAK2B,QAAOrB,GAAWA,EAAQsB,KAAOH,IAEtDzB,EAAO0B,EAIPZ,EAAAe,iBAAiBH,GAEjB9B,EAAYe,UAAY,GAExBR,EAASuB,GAuCJI,CAAAxB,EAAAsB,KAGR,WAAAT,EAAAC,OAAAC,SAAA,iBAAAF,EAAAC,OAAAV,YAEDD,GAAA,EACMU,EAAAC,OAAcV,UAAG,UAAAJ,EAAAO,QAAAF,UAAAF,EACbZ,SAAOC,eAAA,UAAAQ,EAAeO,QAAMF,UAAMF,GAExB,WAAVU,EAAAC,OAAUC,SAAwB,cAAxBF,EAAAC,OAAAV,YACVD,GAAO,EACPa,QAAUC,IAAAd,GACVZ,SAAOC,eAAA,UAAAQ,EAAeO,QAAMF,UAAMF,MArEpCsB,CAAczB,GACdL,GAAS+B,SAAS1B,EAAQU,UAG9BjB,EAAakC,UAAYnB,EAAAC,eAAed,KAqE5BiB,iBAAA,UAAAM,MAAAL,6BAURe,EAAA,CACArB,KATAX,EAAIW,KAAAsB,MAUJC,SATAlC,EAAOkC,SAAAD,MAUVE,QATOnC,EAAAmC,QAAAF,MAYVG,OAXiBA,KAAAH,MAanBI,QAZKrC,EAAAqC,QAAAJ,MAaGK,KAXAtC,EAAYsC,KAAAL,MAYdM,YAXQvC,EAAAuC,YAAmBN,OAa3BO,kBACAC,EAAAC,mBAAOrD,EAAiBmD,WAAAG,IAAA7C,EAAAC,EAAAiC,GACxBlC,EAAA,GACDJ,EACUe,UAAA,GAKXR,EAASH,IAER8C,MAAA","sources":["scripts/app.js","scripts/cartPage.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth} from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBmbovjcD1DIZlbKQmZYbNRHwxraEcjKd4\",\r\n  authDomain: \"web-icesi-isa.firebaseapp.com\",\r\n  projectId: \"web-icesi-isa\",\r\n  storageBucket: \"web-icesi-isa.appspot.com\",\r\n  messagingSenderId: \"643993867165\",\r\n  appId: \"1:643993867165:web:2e89c881be4469870c5574\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app);\r\n\r\nexport {\r\n    app,\r\n    auth,\r\n    db,\r\n    storage\r\n}","import { auth, db } from \"./app\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { getFirebaseCart, createFirebaseCart } from \"./cart\";\r\nimport { addProductToCart } from \"./utils\";\r\nimport { getMyLocalCart, currencyFormat } from \"./utils\";\r\n\r\nconst cartSection = document.getElementById(\"cart\");\r\nconst totalSection = document.getElementById(\"total\");\r\nlet cart = [];\r\nlet total = 0;\r\n\r\nconst paymentCartForm = document.getElementById(\"paymentForm\");\r\n\r\n\r\nfunction loadCart(cart) {\r\n    \r\n    cart.forEach(product => {\r\n        renderProduct(product);\r\n        total += parseInt(product.price);\r\n    });\r\n\r\n    totalSection.innerText = currencyFormat(total);\r\n};\r\n\r\nasync function removeProduct(productId) {\r\n    const newCart = cart.filter(product => product.id !== productId);\r\n    \r\n    cart = newCart;\r\n\r\n\r\n\r\n    addProductToCart(newCart);\r\n\r\n    cartSection.innerHTML = \"\";\r\n\r\n    loadCart(newCart);\r\n\r\n}\r\n\r\n\r\nfunction renderProduct(product) {\r\n    const productCart = document.createElement(\"li\");\r\n    let amount = 1;\r\n    productCart.className = \"product\";\r\n    productCart.innerHTML = `\r\n    <button class=\"product__delete\">X</button>\r\n    <img src=\"${product.images[0]}\" class=\"product__image\">\r\n    <h2 class=\"product__name\">${product.name}</h2>\r\n    <div class=\"counter\">\r\n        <button class=\"remove__item\"><</button>\r\n        <p id=\"amount_${product.name}\" class=\"counter__text\">${amount}</p>\r\n        <button class=\"add__item\">></button>\r\n    </div>\r\n    <h3 class=\"product__price\">${currencyFormat(product.price)}</h3>\r\n    \r\n    `;\r\n\r\n    cartSection.appendChild(productCart);\r\n\r\n    productCart.addEventListener(\"click\", e => {\r\n         if (e.target.tagName === \"BUTTON\" &&  e.target.className === \"product__delete\") {\r\n             console.log(\"remove it!\");\r\n             removeProduct(product.id);\r\n         }\r\n         if (e.target.tagName === \"BUTTON\" &&  e.target.className === \"remove__item\") {\r\n            amount-=1;\r\n            e.target.className(`amount_${product.name}`).innerHTML = amount;\r\n            document.getElementById(`amount_${product.name}`).innerHTML = amount\r\n        }\r\n        if (e.target.tagName === \"BUTTON\" &&  e.target.className === \"add__item\") {\r\n            amount+=1;\r\n            console.log(amount);\r\n            document.getElementById(`amount_${product.name}`).innerHTML = amount\r\n            \r\n        }\r\n\r\n    })\r\n};\r\n\r\npaymentCartForm.addEventListener('submit', async e =>{\r\n    e.preventDefault();\r\n    const name = paymentCartForm.name.value;\r\n    const lastname = paymentCartForm.lastname.value;\r\n    const country = paymentCartForm.country.value;\r\n    const town = paymentCartForm.town.value;\r\n    const address = paymentCartForm.address.value;\r\n    const card = paymentCartForm.card.value;\r\n    const card_number = paymentCartForm.card_number.value;\r\n    const userInfo = {\r\n        name,\r\n        lastname,\r\n        country,\r\n        town,\r\n        address,\r\n        card,\r\n        card_number,\r\n    }\r\n\r\n    if (userLogged) {\r\n        await createFirebaseCart(db, userLogged.uid, cart,total, userInfo);\r\n        cart = [];\r\n        cartSection.innerHTML = \"\";\r\n        loadCart(cart);\r\n    } else {\r\n        alert(\"inicia sesiÃ³n :(\")\r\n    }\r\n})\r\n\r\nonAuthStateChanged(auth, async (user) => {\r\n    if (user) {\r\n      // User is signed in, see docs for a list of available properties\r\n      // https://firebase.google.com/docs/reference/js/firebase.User\r\n      userLogged = user;\r\n      cart = getMyLocalCart();\r\n      //cart = await getFirebaseCart(db, userLogged.uid);\r\n    } else {\r\n        cart = getMyLocalCart();  \r\n      // User is signed out\r\n      // ...\r\n    }\r\n\r\n    loadCart(cart);\r\n\r\n  });"],"names":["$fXOuZ","parcelRequire","$1b8da20507600032$export$729c8b7179294ba","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","$1b8da20507600032$export$73693bad9f5880b0","$1tHc5","getAuth","$1b8da20507600032$export$f932f06c7eb6abeb","$etBjH","getFirestore","$aYguL","getStorage","$37372534b3b261c6$var$cartSection","document","getElementById","$37372534b3b261c6$var$totalSection","$37372534b3b261c6$var$cart","$37372534b3b261c6$var$total","$37372534b3b261c6$var$paymentCartForm","$37372534b3b261c6$var$loadCart","cart","forEach","product","productCart","createElement","amount","className","innerHTML","images","name","$7Jg0N","currencyFormat","price","appendChild","addEventListener","e","target","tagName","console","log","async","productId","newCart","filter","id","addProductToCart","$37372534b3b261c6$var$removeProduct","$37372534b3b261c6$var$renderProduct","parseInt","innerText","userInfo","value","lastname","country","town","address","card","card_number","userLogged","$1ZESu","createFirebaseCart","uid","alert"],"version":3,"file":"cart.b9470192.js.map"}
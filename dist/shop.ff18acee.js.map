{"mappings":"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","sources":["scripts/shop.js","scripts/products.js","scripts/addProduct.js"],"sourcesContent":["import { db, auth } from \"./app\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { getProducts } from \"./products\";\r\nimport { createFirebaseCart, getFirebaseCart  } from \"./cart\";\r\nimport { getMyLocalCart, addProductToCart, currencyFormat } from \"./utils\";\r\nimport { removeProduct} from \"./addProduct\";\r\nimport { getUser } from \"./getUser\";\r\n\r\n\r\nconst productSection = document.getElementById(\"products\");\r\nconst extraSection = document.getElementById(\"extra\");\r\nconst categoryFilter = document.getElementById(\"category\");\r\nconst orderFilterPrice = document.getElementById(\"order\");\r\nconst orderFilterReview = document.getElementById(\"order-review\");\r\n\r\nlet userLogged = undefined;\r\nlet products = [];\r\nlet cart = [];\r\n\r\n\r\nasync function loadProducts() {\r\n    const firebaseProducts = await getProducts(db);\r\n    productSection.innerHTML = \"\";\r\n    firebaseProducts.forEach(product => {\r\n        renderProduct(product);\r\n    });\r\n\r\n    products = firebaseProducts;\r\n}\r\n\r\nfunction renderProduct(item) {\r\n    const product = document.createElement(\"a\");\r\n    product.className = \"product\";\r\n\r\n    product.setAttribute(\"href\", `./product.html?id=${item.id}`);\r\n\r\n    const coverImage = item.images ? item.images[0] : \"https://cdn1.iconfinder.com/data/icons/business-company-1/500/image-512.png\";\r\n\r\n    const isProductAddedToCart = cart.some((productCart) => productCart.id === item.id);\r\n\r\n    const productButtonCart = isProductAddedToCart ?\r\n    '<button class=\"product__cart\" disabled>Producto a単adido</button>' :\r\n    '<button class=\"product__cart\">A単adir al carrito</button>';\r\n\r\n    const editProductButtonCart = '<button class=\"product__edit\" >Editar Producto</button> <button class=\"product__cart\" disabled>Producto a単adido</button>';\r\n\r\n    const deleteProductButtonCart = '<button class=\"product__delete\">X</button>'\r\n\r\n    product.innerHTML = `\r\n    <img src=\"${coverImage}\" alt=\"\" class=\"product__image\">\r\n    <div class=\"product__info\">\r\n        <p class=\"product__category\">${item.category}</p> \r\n        <h2 class=\"product__name\">${item.name}</h2>\r\n        <p class=\"product__review\"> Review: ${item.review}</p> \r\n        <h3 class=\"product__price\">${currencyFormat(item.price)}</h3>\r\n        ${ userLogged && userLogged.isAdmin ? editProductButtonCart :productButtonCart}\r\n        ${userLogged && userLogged.isAdmin ? deleteProductButtonCart : \"\" }\r\n    </div>\r\n    `;\r\n\r\n    productSection.appendChild(product);\r\n\r\n    const productCartButton = product.querySelector(\".product__cart\");\r\n    const productEditButton = product.querySelector(\".product__edit\");\r\n    const productRemoveButton = product.querySelector(\".product__delete\");\r\n\r\n    productCartButton.addEventListener(\"click\", async (e) => {\r\n        e.preventDefault(); // evitar que al dar click en el boton, funcione el enlace del padre.\r\n\r\n        cart.push(item);\r\n        addProductToCart(cart);\r\n\r\n        if (userLogged ) {\r\n            await createFirebaseCart(db, userLogged.uid, cart);\r\n        }\r\n\r\n        productCartButton.setAttribute(\"disabled\", true);\r\n        productCartButton.innerText = \"Producto a単adido\";\r\n\r\n    });\r\n    if( userLogged && userLogged.isAdmin ){\r\n        productEditButton.addEventListener(\"click\", async (event) => {\r\n            event.preventDefault();\r\n            window.location.href = `./createProduct.html?id=${item.id}`\r\n        })\r\n\r\n        productRemoveButton.addEventListener(\"click\", async (event) => {\r\n            event.preventDefault();\r\n            await removeProduct(db,item.id);\r\n            loadProducts();\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction addBtnOption(){\r\n    const btnAdd = document.createElement('button');\r\n    btnAdd.classList = \"btn__add\";\r\n    btnAdd.id = \"btn__addProduct\";\r\n    btnAdd.innerHTML = \"+\";\r\n\r\n    extraSection.appendChild(btnAdd);\r\n\r\n    btnAdd.addEventListener(\"click\", ()=>{\r\n        window.location.href = \"createProduct.html\";\r\n    })\r\n\r\n}\r\n\r\nfunction filterBy(){\r\n    const newCategory = categoryFilter.value;\r\n    const newOrder = orderFilterPrice.value;\r\n    const newOrderReview = orderFilterReview.value;\r\n\r\n    let filteredProducts = [];\r\n\r\n    if (newCategory !== \"\") {\r\n        filteredProducts = products.filter((product) => product.category === newCategory);\r\n    } else {\r\n        filteredProducts = products;\r\n    }\r\n\r\n    if (newOrder === \"asc\") {\r\n        filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);\r\n    }\r\n\r\n    if (newOrder === \"desc\") {\r\n        filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);\r\n    }\r\n\r\n    if(newOrderReview === \"mp\") {\r\n        filteredProducts = filteredProducts.sort((a, b) => b.review - a.review)\r\n    }\r\n\r\n    if(newOrderReview === \"lp\") {\r\n        filteredProducts = filteredProducts.sort((a, b) => a.review - b.review);\r\n    }\r\n    \r\n    productSection.innerHTML = \"\";\r\n    filteredProducts.forEach(product => {\r\n        renderProduct(product);\r\n    });\r\n\r\n}\r\n\r\ncategoryFilter.addEventListener(\"change\", e => {\r\n    filterBy();\r\n});\r\n\r\norderFilterPrice.addEventListener(\"change\", e => {\r\n    filterBy();\r\n});\r\n\r\norderFilterReview.addEventListener(\"change\", e => {\r\n    filterBy();\r\n})\r\n\r\nonAuthStateChanged(auth, async (user) => {\r\n    if (user) {\r\n      // User is signed in, see docs for a list of available properties\r\n      // https://firebase.google.com/docs/reference/js/firebase.User\r\n      \r\n      getUser(user.uid).then(user=>{\r\n          userLogged = user;\r\n          if(userLogged.isAdmin){\r\n              addBtnOption();\r\n          }\r\n         loadProducts();\r\n      });\r\n      \r\n\r\n      cart = await getFirebaseCart(db, user.uid);\r\n      \r\n      // ...\r\n    } else {\r\n        cart = getMyLocalCart();\r\n      // User is signed out\r\n      // ...\r\n    }\r\n\r\n    loadProducts();\r\n\r\n  });\r\n\r\n","import { collection, getDocs } from \"firebase/firestore\";\r\n\r\nasync function getProducts(db) {\r\n    const collectionRef = collection(db, \"products\");\r\n    try {\r\n        const { docs } =  await getDocs(collectionRef);\r\n        const products = docs.map((doc) => {\r\n            return {\r\n                ...doc.data(),\r\n                id: doc.id,\r\n            };\r\n        });\r\n        return products;\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport {\r\n    getProducts,\r\n}","import { addDoc, updateDoc, deleteDoc, collection, doc } from \"firebase/firestore\";\r\nimport { ref, uploadBytes, getDownloadURL} from \"firebase/storage\";\r\n\r\nasync function addProduct(db, product) {\r\n    try {\r\n        await addDoc(collection(db, \"products\"), product);\r\n        console.log(\"Product added! :)\");\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nasync function editProduct(db, product, id) {\r\n    try {\r\n        const updateRef = doc(db, \"products\", id);\r\n\r\n        // Set the \"capital\" field of the city 'DC'\r\n        await updateDoc(updateRef, product);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function removeProduct(db,id) {\r\n    \r\n    await deleteDoc(doc(db, \"products\", id));\r\n}\r\n\r\nasync function imageUploadReference(storage, image) {\r\n    const storageRef = ref(storage, `products/images/${image.name}`);\r\n    return await uploadBytes(storageRef, image);\r\n}\r\n\r\nasync function uploadImages(storage, images = []) {\r\n    const uploadedImages = images.map( async (image) => {\r\n        const imageReference = await imageUploadReference(storage, image);\r\n\r\n        return getDownloadURL(ref(storage, imageReference.ref.fullPath));\r\n    });\r\n\r\n    return uploadedImages;\r\n\r\n}\r\n\r\nexport {\r\n    addProduct,\r\n    editProduct,\r\n    removeProduct,\r\n    uploadImages\r\n}"],"names":["$2mFfu","parcelRequire","$etBjH","$1edec348a320de1d$var$productSection","document","getElementById","$1edec348a320de1d$var$extraSection","$1edec348a320de1d$var$categoryFilter","$1edec348a320de1d$var$orderFilterPrice","$1edec348a320de1d$var$orderFilterReview","$1edec348a320de1d$var$userLogged","$1edec348a320de1d$var$products","$1edec348a320de1d$var$cart","async","$1edec348a320de1d$var$loadProducts","firebaseProducts","db","collectionRef","collection","docs","getDocs","map","doc","data","id","e","console","log","$5b188fdba1a03279$export$68a801b7b3c0bfaa","innerHTML","forEach","product","$1edec348a320de1d$var$renderProduct","item","createElement","className","setAttribute","coverImage","images","productButtonCart","some","productCart","category","name","review","$7Jg0N","currencyFormat","price","isAdmin","appendChild","productCartButton","querySelector","productEditButton","productRemoveButton","addEventListener","push","addProductToCart","$1ZESu","createFirebaseCart","uid","innerText","event","preventDefault","window","location","href","deleteDoc","$7f7e9d7920b9c3df$export$86a330d9a979afdd","$1edec348a320de1d$var$filterBy","newCategory","value","newOrder","newOrderReview","filteredProducts","filter","sort","a","b","onAuthStateChanged","auth","user1","btnAdd","classList"],"version":3,"file":"shop.ff18acee.js.map"}